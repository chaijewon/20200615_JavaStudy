/*
 *   연산자 => 데이터 가공 
 *   =================
 *   = 연산시 데이터형 동일해야 => 연산이 된다 (데이터형을 같게 만든 다음에 연산)
 *        =======> 형변환 
 *        자동으로 변환 => 작은 데이터 => 큰 데이터 
 *           10 + 10.5
 *           ==
 *           10.0
 *           
 *           'A' + 1
 *           ===
 *            65
 *        강제로 변환 => 큰 데이터 => 작은 데이터로 변경 (프로그래머가 직접 처리)
 *                   (type)
 *        *** int 이하는 연산이 되면 => int로 결과값이 나온다  
 *   =    char는 모든 연산시에 정수로 변경 
 *   =    연산자 => 약간의 우선순위 
 *                => 산술 ( +,- => * ,/ ,% 우선 순위)
 *   =  연산자의 종류 
 *      단독 사용 : 산술 연산자 , 증감 연산자 , 대입 연산자 
 *      조건 사용 : 비교연산자 , 논리 연산자 , 부정 연산자 (******)
 *               =============================
 *                1) if문 , for문, while문
 *                
 *      변수+연산자+제어문 (기능 : 라이브러리) 
 *      ==============
 */
public class 연산자정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
        byte b1=10;
        byte b2=20;
        int b3=b1+b2; // byte+byte=int
        
        int a=10;
        long b=20L;
        double d=10.5;
        // a+b+d 
        // a=10.0 b=20.0 d=10.5
        String s="";
        // double r=a+b+d+s; 
        // String 
	}

}
